Content-Type: text/enriched
Text-Width: 70

<x-color><param>#8995ba</param>#+TITLE Emacs Configuration</x-color>

<x-display><param>(disable-eval #("◉" 0 1 (face org-modern-symbol)))</param>*</x-display> Basic Cofiguration
This part is consist of 'Basic', 'UI', 'Search' and so on.

<x-display><param>(disable-eval #("○" 0 1 (face org-modern-symbol)))</param>**</x-display> Paths

<x-bg-color><param>#23242f</param><x-color><param>#6272a4</param>#+begin_src emacs-lisp :tangle ./config.el

</x-color></x-bg-color><x-color><param>#61bfff</param><x-bg-color><param>#23242f</param><x-color><param>#bd93f9</param>(</x-color></x-bg-color></x-color><x-bg-color><param>#23242f</param><x-color><param>#bd93f9</param><x-color><param>#ff79c6</param>defvar</x-color> <x-color><param>#ffc9e8</param>windows-nt-agenda-path</x-color> <x-color><param>#f1fa8c</param>"C:/Users/Desktop/Notes"</x-color><x-color><param>#61bfff</param>)</x-color>

<x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>defvar</x-color> <x-color><param>#ffc9e8</param>windows-nt-agenda-path</x-color> <x-color><param>#f1fa8c</param>"C:/Users/Desktop/Notes"</x-color><x-color><param>#61bfff</param>)</x-color>

<x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>defvar</x-color> <x-color><param>#ffc9e8</param>macos-agenda-path</x-color> <x-color><param>#f1fa8c</param>"~/Documents/Notes/agenda/"</x-color><x-color><param>#61bfff</param>)</x-color>
<x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>defvar</x-color> <x-color><param>#ffc9e8</param>macos-agenda-path</x-color> <x-color><param>#f1fa8c</param>"~/Documents/Notes/agenda/"</x-color><x-color><param>#61bfff</param>)</x-color>
<x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>defvar</x-color> <x-color><param>#ffc9e8</param>linux-agenda-path</x-color> <x-color><param>#f1fa8c</param>"~/Documents/Notes/agenda/"</x-color><x-color><param>#61bfff</param>)</x-color>
<x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>defvar</x-color> <x-color><param>#ffc9e8</param>linux-agenda-path</x-color> <x-color><param>#f1fa8c</param>"~/Documents/Notes/agenda/"</x-color><x-color><param>#61bfff</param>)</x-color>


</x-color></x-bg-color>#+end_src
<x-display><param>(disable-eval #("○" 0 1 (face org-modern-symbol)))</param>**</x-display> Basic Configura
<x-bg-color><param>#23242f</param><x-color><param>#6272a4</param>#+BEGIN_SRC emacs-lisp :tangle ./config.el
</x-color></x-bg-color><x-bg-color><param>#23242f</param><x-color><param>#bd93f9</param>;;<x-color><param>#6272a4</param>------------------------Startup------------------------

</x-color>

;; <x-color><param>#6272a4</param>Disable visible scrollbar

</x-color><x-color><param>#61bfff</param>(</x-color>scroll-bar-mode -1<x-color><param>#61bfff</param>)</x-color>

;; <x-color><param>#6272a4</param>Disable the toolbar

</x-color><x-color><param>#61bfff</param>(</x-color>tool-bar-mode -1<x-color><param>#61bfff</param>)</x-color>          

;; <x-color><param>#6272a4</param>Disable tooltips
</x-color><x-color><param>#61bfff</param>(</x-color>tooltip-mode -1<x-color><param>#61bfff</param>)</x-color>           

;; <x-color><param>#6272a4</param>Disable the menu bar
</x-color><x-color><param>#61bfff</param>(</x-color>menu-bar-mode -1<x-color><param>#61bfff</param>)</x-color>            

;; <x-color><param>#6272a4</param>Give some breathing room
</x-color><x-color><param>#61bfff</param>(</x-color>set-fringe-mode 10<x-color><param>#61bfff</param>)</x-color>

;; <x-color><param>#6272a4</param>Set column number
</x-color><x-color><param>#61bfff</param>(</x-color>column-number-mode<x-color><param>#61bfff</param>)</x-color>

<x-color><param>#61bfff</param>(</x-color>global-display-line-numbers-mode t<x-color><param>#61bfff</param>)</x-color>

;; <x-color><param>#6272a4</param>Disable cursor blinking
</x-color><x-color><param>#61bfff</param>(</x-color>blink-cursor-mode -1<x-color><param>#61bfff</param>)</x-color>  

;; <x-color><param>#6272a4</param>Disable startup message
</x-color><x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>setq</x-color> inhibit-startup-message t<x-color><param>#61bfff</param>)</x-color>

;; <x-color><param>#6272a4</param>Disable the wrong bell
</x-color><x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>setq</x-color> visible-bell nil<x-color><param>#61bfff</param>)</x-color>
<x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>setq</x-color> ring-bell-function 'ignore<x-color><param>#61bfff</param>)</x-color>

;; <x-color><param>#6272a4</param>Setup the font

</x-color><x-color><param>#61bfff</param>(</x-color>set-face-attribute 'default nil <x-color><param>#ffb86c</param>:font</x-color> <x-color><param>#f1fa8c</param>"FiraMono Nerd Font"</x-color> <x-color><param>#ffb86c</param>:height</x-color> 160<x-color><param>#61bfff</param>)</x-color>

;; <x-color><param>#6272a4</param>Set the global escape key to ESC
</x-color><x-color><param>#61bfff</param>(</x-color>global-set-key <x-color><param>#ff79c6</param>(</x-color>kbd <x-color><param>#f1fa8c</param>"<<escape>"</x-color><x-color><param>#ff79c6</param>)</x-color> 'keyboard-escape-quit<x-color><param>#61bfff</param>)</x-color>

<x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>setq</x-color> package-user-dir <x-color><param>#f1fa8c</param>"~/.emacs.e/packages/"</x-color><x-color><param>#61bfff</param>)</x-color>
;; <x-color><param>#6272a4</param>Emacs window maximize 
</x-color><x-color><param>#61bfff</param>(</x-color>add-hook 'emacs-startup-hook 'toggle-frame-maximized<x-color><param>#61bfff</param>)</x-color>

;; <x-color><param>#6272a4</param>Ensure Emacs window maximize when create new file and window 
</x-color><x-color><param>#61bfff</param>(</x-color>add-to-list 'default-frame-alist '<x-color><param>#ff79c6</param>(</x-color>fullscreen . maximized<x-color><param>#ff79c6</param>)</x-color><x-color><param>#61bfff</param>)</x-color>

;; <x-color><param>#6272a4</param>Use the "recentf" to record the recent open files

</x-color><x-color><param>#61bfff</param>(</x-color>recentf-mode 1<x-color><param>#61bfff</param>)</x-color>  
<x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>setq</x-color> recentf-max-menu-items 25<x-color><param>#61bfff</param>)</x-color>
<x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>setq</x-color> recentf-max-saved-items 50<x-color><param>#61bfff</param>)</x-color>

;; <x-color><param>#6272a4</param>Periodically save the recentf list
</x-color><x-color><param>#61bfff</param>(</x-color>run-with-idle-timer 30 t 'recentf-save-list<x-color><param>#61bfff</param>)</x-color> 
</x-color></x-bg-color>#+END_SRC

** Package Management
#+BEGIN_SRC emacs-lisp :tangle ./config.el
(require 'package)

(setq package-archives '(("melpa" . "https://melpa.org/packages/")

                         ("org" . "https://orgmode.org/elpa/")
                         ("elpa" . "https://elpa.gnu.org/packages/")))

(package-initialize)
(unless package-archive-contents
 (package-refresh-contents))

;; Initialize use-package on non-Linux platforms
(unless (package-installed-p 'use-package)
   (package-install 'use-package))

(require 'use-package)
(setq use-package-always-ensure t)

<x-color><param>#8995ba</param>#+END_SRC</x-color>

<x-display><param>(disable-eval #("◉" 0 1 (face org-modern-symbol)))</param>*</x-display> Search Enhanced
Using 'ivy', 'swiper' and 'counsel'.
<x-bg-color><param>#23242f</param><x-color><param>#6272a4</param>#+BEGIN_SRC emacs-lisp :tangle ./config.el
</x-color></x-bg-color><x-color><param>#61bfff</param><x-bg-color><param>#23242f</param><x-color><param>#bd93f9</param>(</x-color></x-bg-color></x-color><x-bg-color><param>#23242f</param><x-color><param>#bd93f9</param><x-color><param>#ff79c6</param>use-package</x-color> <x-color><param>#8be9fd</param>ivy</x-color>
  <x-color><param>#ffb86c</param>:diminish</x-color>
  <x-color><param>#ffb86c</param>:bind</x-color> <x-color><param>#ff79c6</param>(</x-color><x-color><param>#50fa7b</param>(</x-color><x-color><param>#f1fa8c</param>"C-s"</x-color> . swiper<x-color><param>#50fa7b</param>)</x-color> ;; <x-color><param>#6272a4</param>搜索当前缓冲区
</x-color>         <x-color><param>#ffb86c</param>:map</x-color> ivy-minibuffer-map
         <x-color><param>#50fa7b</param>(</x-color><x-color><param>#f1fa8c</param>"TAB"</x-color> . ivy-alt-done<x-color><param>#50fa7b</param>)</x-color>
         <x-color><param>#50fa7b</param>(</x-color><x-color><param>#f1fa8c</param>"C-j"</x-color> . ivy-next-line<x-color><param>#50fa7b</param>)</x-color>
         <x-color><param>#50fa7b</param>(</x-color><x-color><param>#f1fa8c</param>"C-k"</x-color> . ivy-previous-line<x-color><param>#50fa7b</param>)</x-color>
         <x-color><param>#ffb86c</param>:map</x-color> ivy-switch-buffer-map
         <x-color><param>#50fa7b</param>(</x-color><x-color><param>#f1fa8c</param>"C-k"</x-color> . ivy-previous-line<x-color><param>#50fa7b</param>)</x-color>
         <x-color><param>#50fa7b</param>(</x-color><x-color><param>#f1fa8c</param>"C-l"</x-color> . ivy-done<x-color><param>#50fa7b</param>)</x-color><x-color><param>#ff79c6</param>)</x-color>
  <x-color><param>#ffb86c</param>:config</x-color>
  <x-color><param>#ff79c6</param>(</x-color>ivy-mode 1<x-color><param>#ff79c6</param>)</x-color>
  <x-color><param>#ff79c6</param>(setq</x-color> ivy-use-virtual-buffers t
        ivy-count-format <x-color><param>#f1fa8c</param>"%d/%d "</x-color> ;; <x-color><param>#6272a4</param>显示候选项计数
</x-color>        enable-recursive-minibuffers t<x-color><param>#ff79c6</param>)</x-color><x-color><param>#61bfff</param>)</x-color>

<x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>use-package</x-color> <x-color><param>#8be9fd</param>counsel</x-color>
  <x-color><param>#ffb86c</param>:after</x-color> ivy
  <x-color><param>#ffb86c</param>:bind</x-color> <x-color><param>#ff79c6</param>(</x-color><x-color><param>#50fa7b</param>(</x-color><x-color><param>#f1fa8c</param>"M-x"</x-color> . counsel-M-x<x-color><param>#50fa7b</param>)</x-color> ;; <x-color><param>#6272a4</param>替代默认 M-x
</x-color>         <x-color><param>#50fa7b</param>(</x-color><x-color><param>#f1fa8c</param>"C-x C-f"</x-color> . counsel-find-file<x-color><param>#50fa7b</param>)</x-color> ;; <x-color><param>#6272a4</param>查找文件
</x-color>         <x-color><param>#50fa7b</param>(</x-color><x-color><param>#f1fa8c</param>"C-x b"</x-color> . ivy-switch-buffer<x-color><param>#50fa7b</param>)</x-color> ;; <x-color><param>#6272a4</param>切换缓冲区
</x-color>         <x-color><param>#50fa7b</param>(</x-color><x-color><param>#f1fa8c</param>"C-x C-r"</x-color> . counsel-recentf<x-color><param>#50fa7b</param>)</x-color><x-color><param>#ff79c6</param>)</x-color> ;; <x-color><param>#6272a4</param>最近文件
</x-color>  <x-color><param>#ffb86c</param>:config</x-color>
  <x-color><param>#ff79c6</param>(setq</x-color> counsel-find-file-ignore-regexp <x-color><param>#f1fa8c</param>"\\`\\."</x-color><x-color><param>#ff79c6</param>)</x-color><x-color><param>#61bfff</param>)</x-color> ;; <x-color><param>#6272a4</param>忽略隐藏文件

</x-color><x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>use-package</x-color> <x-color><param>#8be9fd</param>swiper</x-color>
  <x-color><param>#ffb86c</param>:after</x-color> ivy
  <x-color><param>#ffb86c</param>:bind</x-color> <x-color><param>#ff79c6</param>(</x-color><x-color><param>#50fa7b</param>(</x-color><x-color><param>#f1fa8c</param>"C-s"</x-color> . swiper<x-color><param>#50fa7b</param>)</x-color>
         <x-color><param>#50fa7b</param>(</x-color><x-color><param>#f1fa8c</param>"C-r"</x-color> . swiper-isearch-backward<x-color><param>#50fa7b</param>)</x-color><x-color><param>#ff79c6</param>)</x-color><x-color><param>#61bfff</param>)</x-color> ;; <x-color><param>#6272a4</param>向后搜索
</x-color><x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>use-package</x-color> <x-color><param>#8be9fd</param>ivy-posframe</x-color>
  <x-color><param>#ffb86c</param>:after</x-color> ivy
  <x-color><param>#ffb86c</param>:config</x-color>
  <x-color><param>#ff79c6</param>(setq</x-color> ivy-posframe-display-functions-alist
        '<x-color><param>#50fa7b</param>(</x-color><x-color><param>#bd93f9</param>(</x-color>swiper          . ivy-posframe-display-at-frame-center<x-color><param>#bd93f9</param>)</x-color>
          <x-color><param>#bd93f9</param>(</x-color>complete-symbol . ivy-posframe-display-at-point<x-color><param>#bd93f9</param>)</x-color>
          <x-color><param>#bd93f9</param>(</x-color>t               . ivy-posframe-display-at-frame-center<x-color><param>#bd93f9</param>)</x-color><x-color><param>#50fa7b</param>)</x-color><x-color><param>#ff79c6</param>)</x-color>
  <x-color><param>#ff79c6</param>(setq</x-color> ivy-posframe-parameters
        '<x-color><param>#50fa7b</param>(</x-color><x-color><param>#bd93f9</param>(</x-color>left-fringe . 10<x-color><param>#bd93f9</param>)</x-color>
          <x-color><param>#bd93f9</param>(</x-color>right-fringe . 10<x-color><param>#bd93f9</param>)</x-color><x-color><param>#50fa7b</param>)</x-color><x-color><param>#ff79c6</param>)</x-color>
  <x-color><param>#ff79c6</param>(</x-color>ivy-posframe-mode 1<x-color><param>#ff79c6</param>)</x-color><x-color><param>#61bfff</param>)</x-color>
;; <x-color><param>#6272a4</param>让 `M-x` 显示更多信息
</x-color><x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>setq</x-color> ivy-rich-display-transformers-list
      '<x-color><param>#ff79c6</param>(</x-color>counsel-M-x
        <x-color><param>#50fa7b</param>(</x-color><x-color><param>#ffb86c</param>:columns</x-color>
         <x-color><param>#bd93f9</param>(</x-color><x-color><param>#0189cc</param>(</x-color>counsel-M-x-transformer <x-color><param>#61bfff</param>(</x-color><x-color><param>#ffb86c</param>:width</x-color> 40<x-color><param>#61bfff</param>)</x-color><x-color><param>#0189cc</param>)</x-color> ;; <x-color><param>#6272a4</param>显示命令名称
</x-color>          <x-color><param>#0189cc</param>(</x-color>ivy-rich-counsel-function-docstring <x-color><param>#61bfff</param>(</x-color><x-color><param>#ffb86c</param>:face</x-color> font-lock-doc-face<x-color><param>#61bfff</param>)</x-color><x-color><param>#0189cc</param>)</x-color><x-color><param>#bd93f9</param>)</x-color><x-color><param>#50fa7b</param>)</x-color><x-color><param>#ff79c6</param>)</x-color><x-color><param>#61bfff</param>)</x-color>

<x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>use-package</x-color> <x-color><param>#8be9fd</param>ivy-rich</x-color>
  <x-color><param>#ffb86c</param>:after</x-color> ivy
  <x-color><param>#ffb86c</param>:config</x-color>
  <x-color><param>#ff79c6</param>(</x-color>ivy-rich-mode 1<x-color><param>#ff79c6</param>)</x-color><x-color><param>#61bfff</param>)</x-color> ;; <x-color><param>#6272a4</param>启用额外信息显示

</x-color></x-color></x-bg-color>#+END_SRC

<x-display><param>(disable-eval #("◉" 0 1 (face org-modern-symbol)))</param>*</x-display> UI
This part includes theme, mode line,dashmode and treemacs.
<x-bg-color><param>#23242f</param><x-color><param>#6272a4</param>#+BEGIN_SRC emacs-lisp :tangle ./config.el
</x-color></x-bg-color><x-bg-color><param>#23242f</param><x-color><param>#bd93f9</param>  ;;<x-color><param>#6272a4</param>------------------------UI------------------------
</x-color>  <x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>use-package</x-color> <x-color><param>#8be9fd</param>all-the-icons</x-color>
    <x-color><param>#ffb86c</param>:ensure</x-color> t<x-color><param>#61bfff</param>)</x-color>
  <x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>setq</x-color> dashboard-icon-type 'all-the-icons<x-color><param>#61bfff</param>)</x-color> ;; <x-color><param>#6272a4</param>启用文件图标
</x-color>
  <x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>use-package</x-color> <x-color><param>#8be9fd</param>doom-modeline</x-color>
    <x-color><param>#ffb86c</param>:ensure</x-color> t
    <x-color><param>#ffb86c</param>:init</x-color> <x-color><param>#ff79c6</param>(</x-color>doom-modeline-mode 1<x-color><param>#ff79c6</param>)</x-color><x-color><param>#61bfff</param>)</x-color>

  <x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>use-package</x-color> <x-color><param>#8be9fd</param>doom-themes</x-color>
    <x-color><param>#ffb86c</param>:init</x-color> <x-color><param>#ff79c6</param>(</x-color>load-theme 'doom-dracula t<x-color><param>#ff79c6</param>)</x-color><x-color><param>#61bfff</param>)</x-color>

  <x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>use-package</x-color> <x-color><param>#8be9fd</param>rainbow-delimiters</x-color>
    <x-color><param>#ffb86c</param>:hook</x-color> <x-color><param>#ff79c6</param>(</x-color>prog-mode . rainbow-delimiters-mode<x-color><param>#ff79c6</param>)</x-color><x-color><param>#61bfff</param>)</x-color>

 ;; <x-color><param>#6272a4</param>Dashboard 配置
</x-color><x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>use-package</x-color> <x-color><param>#8be9fd</param>dashboard</x-color>
  <x-color><param>#ffb86c</param>:ensure</x-color> t
  <x-color><param>#ffb86c</param>:config</x-color>
  <x-color><param>#ff79c6</param>(</x-color>dashboard-setup-startup-hook<x-color><param>#ff79c6</param>)</x-color>

  ;; <x-color><param>#6272a4</param>为 Dashboard 缓冲区启用 Evil
</x-color>  <x-color><param>#ff79c6</param>(</x-color>add-hook 'dashboard-mode-hook
            <x-color><param>#50fa7b</param>(</x-color><x-color><param>#ff79c6</param>lambda</x-color> <x-color><param>#bd93f9</param>()</x-color>
              <x-color><param>#bd93f9</param>(</x-color>evil-local-mode 1<x-color><param>#bd93f9</param>)</x-color>
              <x-color><param>#bd93f9</param>(</x-color>evil-emacs-state-exit-hook<x-color><param>#bd93f9</param>)</x-color><x-color><param>#50fa7b</param>)</x-color><x-color><param>#ff79c6</param>)</x-color>
  <x-color><param>#ff79c6</param>(setq</x-color> inhibit-startup-screen t<x-color><param>#ff79c6</param>)</x-color>
  <x-color><param>#ff79c6</param>(setq</x-color> initial-buffer-choice <x-color><param>#50fa7b</param>(</x-color><x-color><param>#ff79c6</param>lambda</x-color> <x-color><param>#bd93f9</param>()</x-color> <x-color><param>#bd93f9</param>(</x-color>get-buffer <x-color><param>#f1fa8c</param>"*dashboard*"</x-color><x-color><param>#bd93f9</param>)</x-color><x-color><param>#50fa7b</param>)</x-color><x-color><param>#ff79c6</param>)</x-color>
  <x-color><param>#ff79c6</param>(setq</x-color> dashboard-startup-banner 'official<x-color><param>#ff79c6</param>)</x-color>
  <x-color><param>#ff79c6</param>(setq</x-color> dashboard-items '<x-color><param>#50fa7b</param>(</x-color><x-color><param>#bd93f9</param>(</x-color>recents . 10<x-color><param>#bd93f9</param>)</x-color> <x-color><param>#bd93f9</param>(</x-color>bookmarks . 5<x-color><param>#bd93f9</param>)</x-color> <x-color><param>#bd93f9</param>(</x-color>projects . 5<x-color><param>#bd93f9</param>)</x-color> <x-color><param>#bd93f9</param>(</x-color>agenda . 5<x-color><param>#bd93f9</param>)</x-color><x-color><param>#50fa7b</param>)</x-color><x-color><param>#ff79c6</param>)</x-color>
  <x-color><param>#ff79c6</param>(setq</x-color> dashboard-set-heading-icons t<x-color><param>#ff79c6</param>)</x-color>
  <x-color><param>#ff79c6</param>(setq</x-color> dashboard-set-file-icons t<x-color><param>#ff79c6</param>)</x-color>
  <x-color><param>#ff79c6</param>(setq</x-color> dashboard-set-navigator t<x-color><param>#ff79c6</param>)</x-color>
  <x-color><param>#ff79c6</param>(setq</x-color> dashboard-center-content t<x-color><param>#ff79c6</param>)</x-color>
  <x-color><param>#ff79c6</param>(setq</x-color> dashboard-set-footer t<x-color><param>#ff79c6</param>)</x-color>
  <x-color><param>#ff79c6</param>(setq</x-color> dashboard-footer-messages '<x-color><param>#50fa7b</param>(</x-color><x-color><param>#f1fa8c</param>"Emacs is awesome! 🚀"</x-color><x-color><param>#50fa7b</param>)</x-color><x-color><param>#ff79c6</param>)</x-color>
  <x-color><param>#ff79c6</param>(</x-color>add-hook 'emacs-startup-hook #'dashboard-refresh-buffer<x-color><param>#ff79c6</param>)</x-color><x-color><param>#61bfff</param>)</x-color>
; <x-color><param>#6272a4</param>让 Dashboard 启动时有 recent files
</x-color>  ; <x-color><param>#6272a4</param>退出时自动保存最近打开的文件
</x-color>  <x-color><param>#61bfff</param>(</x-color>add-hook 'kill-emacs-hook #'recentf-save-list<x-color><param>#61bfff</param>)</x-color>
  ;; <x-color><param>#6272a4</param>启用 all-the-icons，让 UI 更现代化
</x-color>
</x-color></x-bg-color>#+END_SRC

<x-display><param>(disable-eval #("◉" 0 1 (face org-modern-symbol)))</param>*</x-display> Org-mode

<x-bg-color><param>#23242f</param><x-color><param>#6272a4</param>#+BEGIN_SRC emacs-lisp :tangle ./config.el
</x-color></x-bg-color><x-bg-color><param>#23242f</param><x-color><param>#bd93f9</param>;; <x-color><param>#6272a4</param>禁用启动缩进并隐藏格式标记
</x-color><x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>setq</x-color> org-startup-indented nil
      org-hide-emphasis-markers t
      org-ellipsis <x-color><param>#f1fa8c</param>" ▼ "</x-color><x-color><param>#61bfff</param>)</x-color>  ;; <x-color><param>#6272a4</param>更简洁的折叠符号
</x-color>
;; <x-color><param>#6272a4</param>标题与结构美化
</x-color><x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>use-package</x-color> <x-color><param>#8be9fd</param>org-modern</x-color>
  <x-color><param>#ffb86c</param>:ensure</x-color> t
  <x-color><param>#ffb86c</param>:hook</x-color> <x-color><param>#ff79c6</param>(</x-color>org-mode . org-modern-mode<x-color><param>#ff79c6</param>)</x-color>
  <x-color><param>#ffb86c</param>:config</x-color>
  <x-color><param>#ff79c6</param>(setq</x-color> org-modern-star '<x-color><param>#50fa7b</param>(</x-color><x-color><param>#f1fa8c</param>"◉"</x-color> <x-color><param>#f1fa8c</param>"○"</x-color> <x-color><param>#f1fa8c</param>"◆"</x-color> <x-color><param>#f1fa8c</param>"▶"</x-color> <x-color><param>#f1fa8c</param>"◇"</x-color> <x-color><param>#f1fa8c</param>"▷"</x-color> <x-color><param>#f1fa8c</param>"⦿"</x-color> <x-color><param>#f1fa8c</param>"◦"</x-color><x-color><param>#50fa7b</param>)</x-color>  ;; <x-color><param>#6272a4</param>统一标题符号
</x-color>        <x-color><param>#ff79c6</param>)</x-color><x-color><param>#61bfff</param>)</x-color>  

;; <x-color><param>#6272a4</param>标题颜色层级（与 doom-nord 主题协调）
</x-color><x-color><param>#61bfff</param>(</x-color>custom-set-faces
 '<x-color><param>#ff79c6</param>(</x-color>org-document-title <x-color><param>#50fa7b</param>(</x-color><x-color><param>#bd93f9</param>(</x-color>t <x-color><param>#0189cc</param>(</x-color><x-color><param>#ffb86c</param>:height</x-color> 1.8 <x-color><param>#ffb86c</param>:weight</x-color> bold <x-color><param>#ffb86c</param>:foreground</x-color> <x-color><param>#f1fa8c</param>"#8FBCBB"</x-color><x-color><param>#0189cc</param>)</x-color><x-color><param>#bd93f9</param>)</x-color><x-color><param>#50fa7b</param>)</x-color><x-color><param>#ff79c6</param>)</x-color>
 '<x-color><param>#ff79c6</param>(</x-color>org-level-1 <x-color><param>#50fa7b</param>(</x-color><x-color><param>#bd93f9</param>(</x-color>t <x-color><param>#0189cc</param>(</x-color><x-color><param>#ffb86c</param>:height</x-color> 1.6 <x-color><param>#ffb86c</param>:bold</x-color> t <x-color><param>#ffb86c</param>:foreground</x-color> <x-color><param>#f1fa8c</param>"#88C0D0"</x-color><x-color><param>#0189cc</param>)</x-color><x-color><param>#bd93f9</param>)</x-color><x-color><param>#50fa7b</param>)</x-color><x-color><param>#ff79c6</param>)</x-color>
 '<x-color><param>#ff79c6</param>(</x-color>org-level-2 <x-color><param>#50fa7b</param>(</x-color><x-color><param>#bd93f9</param>(</x-color>t <x-color><param>#0189cc</param>(</x-color><x-color><param>#ffb86c</param>:height</x-color> 1.4 <x-color><param>#ffb86c</param>:bold</x-color> t <x-color><param>#ffb86c</param>:foreground</x-color> <x-color><param>#f1fa8c</param>"#81A1C1"</x-color><x-color><param>#0189cc</param>)</x-color><x-color><param>#bd93f9</param>)</x-color><x-color><param>#50fa7b</param>)</x-color><x-color><param>#ff79c6</param>)</x-color>
 '<x-color><param>#ff79c6</param>(</x-color>org-level-3 <x-color><param>#50fa7b</param>(</x-color><x-color><param>#bd93f9</param>(</x-color>t <x-color><param>#0189cc</param>(</x-color><x-color><param>#ffb86c</param>:height</x-color> 1.2 <x-color><param>#ffb86c</param>:bold</x-color> t <x-color><param>#ffb86c</param>:foreground</x-color> <x-color><param>#f1fa8c</param>"#5E81AC"</x-color><x-color><param>#0189cc</param>)</x-color><x-color><param>#bd93f9</param>)</x-color><x-color><param>#50fa7b</param>)</x-color><x-color><param>#ff79c6</param>)</x-color>
 '<x-color><param>#ff79c6</param>(</x-color>org-level-4 <x-color><param>#50fa7b</param>(</x-color><x-color><param>#bd93f9</param>(</x-color>t <x-color><param>#0189cc</param>(</x-color><x-color><param>#ffb86c</param>:height</x-color> 1.1 <x-color><param>#ffb86c</param>:bold</x-color> t <x-color><param>#ffb86c</param>:foreground</x-color> <x-color><param>#f1fa8c</param>"#B48EAD"</x-color><x-color><param>#0189cc</param>)</x-color><x-color><param>#bd93f9</param>)</x-color><x-color><param>#50fa7b</param>)</x-color><x-color><param>#ff79c6</param>)</x-color><x-color><param>#61bfff</param>)</x-color>

;; <x-color><param>#6272a4</param>======================
</x-color>;; <x-color><param>#6272a4</param>代码块深度优化
</x-color>;; <x-color><param>#6272a4</param>======================
</x-color>;; <x-color><param>#6272a4</param>统一代码块样式
</x-color><x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>setq</x-color> org-src-fontify-natively t     ;; <x-color><param>#6272a4</param>启用语法高亮
</x-color>      org-src-tab-acts-natively t    ;; <x-color><param>#6272a4</param>智能缩进
</x-color>      org-src-window-setup 'current-window
      org-confirm-babel-evaluate nil ;; <x-color><param>#6272a4</param>禁用执行确认
</x-color>      org-src-preserve-indentation t<x-color><param>#61bfff</param>)</x-color> ;; <x-color><param>#6272a4</param>保持原缩进
</x-color>
;; <x-color><param>#6272a4</param>代码块外观（与主题协调）
</x-color><x-color><param>#61bfff</param>(</x-color>set-face-attribute 'org-block nil 
                    <x-color><param>#ffb86c</param>:background</x-color> <x-color><param>#f1fa8c</param>"#2E3440"</x-color> 
                    <x-color><param>#ffb86c</param>:foreground</x-color> <x-color><param>#f1fa8c</param>"#D8DEE9"</x-color>
                    <x-color><param>#ffb86c</param>:extend</x-color> t<x-color><param>#61bfff</param>)</x-color>  ;; <x-color><param>#6272a4</param>扩展背景到行尾
</x-color>
;; <x-color><param>#6272a4</param>异步执行支持
</x-color><x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>use-package</x-color> <x-color><param>#8be9fd</param>ob-async</x-color>
  <x-color><param>#ffb86c</param>:ensure</x-color> t
  <x-color><param>#ffb86c</param>:config</x-color>
  <x-color><param>#ff79c6</param>(setq</x-color> ob-async-no-async-languages-alist '<x-color><param>#50fa7b</param>(</x-color><x-color><param>#bd93f9</param>(</x-color>python . t<x-color><param>#bd93f9</param>)</x-color><x-color><param>#50fa7b</param>)</x-color><x-color><param>#ff79c6</param>)</x-color>  ;; <x-color><param>#6272a4</param>Python 需要同步执行
</x-color>  <x-color><param>#61bfff</param>)</x-color>

;; <x-color><param>#6272a4</param>语言支持（按需加载）
</x-color><x-color><param>#61bfff</param>(</x-color>org-babel-do-load-languages
 'org-babel-load-languages
 '<x-color><param>#ff79c6</param>(</x-color><x-color><param>#50fa7b</param>(</x-color>emacs-lisp . t<x-color><param>#50fa7b</param>)</x-color>
   <x-color><param>#50fa7b</param>(</x-color>python     . t<x-color><param>#50fa7b</param>)</x-color>
   <x-color><param>#50fa7b</param>(</x-color>shell      . t<x-color><param>#50fa7b</param>)</x-color>
   <x-color><param>#50fa7b</param>(</x-color>C          . t<x-color><param>#50fa7b</param>)</x-color>
   <x-color><param>#50fa7b</param>(</x-color>js         . t<x-color><param>#50fa7b</param>)</x-color>     ;; <x-color><param>#6272a4</param>新增 JavaScript 支持
</x-color>   <x-color><param>#50fa7b</param>(</x-color>plantuml   . t<x-color><param>#50fa7b</param>)</x-color><x-color><param>#ff79c6</param>)</x-color><x-color><param>#61bfff</param>)</x-color>   ;; <x-color><param>#6272a4</param>新增 UML 支持
</x-color>
;; <x-color><param>#6272a4</param>======================
</x-color>;; <x-color><param>#6272a4</param>智能编辑增强
</x-color>;; <x-color><param>#6272a4</param>======================
</x-color>;; <x-color><param>#6272a4</param>自动补全集成
</x-color><x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>use-package</x-color> <x-color><param>#8be9fd</param>cape</x-color>
  <x-color><param>#ffb86c</param>:ensure</x-color> t
  <x-color><param>#ffb86c</param>:hook</x-color> <x-color><param>#ff79c6</param>(</x-color>org-mode . <x-color><param>#50fa7b</param>(</x-color><x-color><param>#ff79c6</param>lambda</x-color> <x-color><param>#bd93f9</param>()</x-color>
                     <x-color><param>#bd93f9</param>(</x-color><x-color><param>#ff79c6</param>setq-local</x-color> completion-at-point-functions
                                 <x-color><param>#0189cc</param>(</x-color>append completion-at-point-functions
                                         <x-color><param>#61bfff</param>(</x-color>list #'cape-dabbrev
                                               #'cape-file
                                               #'cape-keyword<x-color><param>#61bfff</param>)</x-color><x-color><param>#0189cc</param>)</x-color><x-color><param>#bd93f9</param>)</x-color><x-color><param>#50fa7b</param>)</x-color><x-color><param>#ff79c6</param>)</x-color><x-color><param>#61bfff</param>)</x-color>

;; <x-color><param>#6272a4</param>======================
</x-color>;; <x-color><param>#6272a4</param>导出系统优化
</x-color>;; <x-color><param>#6272a4</param>======================
</x-color><x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>use-package</x-color> <x-color><param>#8be9fd</param>ox-hugo</x-color>
  <x-color><param>#ffb86c</param>:ensure</x-color> t
  <x-color><param>#ffb86c</param>:after</x-color> ox<x-color><param>#61bfff</param>)</x-color>

<x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>use-package</x-color> <x-color><param>#8be9fd</param>ox-pandoc</x-color>
  <x-color><param>#ffb86c</param>:ensure</x-color> t
  <x-color><param>#ffb86c</param>:config</x-color>
  <x-color><param>#ff79c6</param>(setq</x-color> org-pandoc-options '<x-color><param>#50fa7b</param>(</x-color><x-color><param>#bd93f9</param>(</x-color>standalone . t<x-color><param>#bd93f9</param>)</x-color>
                            <x-color><param>#bd93f9</param>(</x-color>mathjax . t<x-color><param>#bd93f9</param>)</x-color>
                            <x-color><param>#bd93f9</param>(</x-color>number-sections . t<x-color><param>#bd93f9</param>)</x-color><x-color><param>#50fa7b</param>)</x-color><x-color><param>#ff79c6</param>)</x-color><x-color><param>#61bfff</param>)</x-color>

;; <x-color><param>#6272a4</param>响应式 HTML 导出模板
</x-color><x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>setq</x-color> org-html-head-extra
      <x-color><param>#ff79c6</param>(</x-color>concat
       <x-color><param>#f1fa8c</param>"<<link href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/themes/prism-tomorrow.min.css\" rel=\"stylesheet\" />\n"</x-color>
       <x-color><param>#f1fa8c</param>"<<script src=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/prism.min.js\"><</script>\n"</x-color>
       <x-color><param>#f1fa8c</param>"<<style>"</x-color>
       <x-color><param>#f1fa8c</param>"body { max-width: 90%; margin: 0 auto; padding: 2em; }"</x-color>
       <x-color><param>#f1fa8c</param>"pre[class*=\"language-\"] { padding: 1.5em; border-radius: 0.5em; }"</x-color>
       <x-color><param>#f1fa8c</param>"table { border-collapse: collapse; margin: 2em 0; box-shadow: 0 0 20px rgba(0,0,0,0.15); }"</x-color>
       <x-color><param>#f1fa8c</param>"th, td { padding: 12px 15px; border-bottom: 1px solid #dddddd; }"</x-color>
       <x-color><param>#f1fa8c</param>"th { background-color: #4C566A; color: white; }"</x-color>
       <x-color><param>#f1fa8c</param>"tr:hover { background-color: #f5f5f5; }"</x-color>
       <x-color><param>#f1fa8c</param>"<</style>"</x-color><x-color><param>#ff79c6</param>)</x-color><x-color><param>#61bfff</param>)</x-color>

;; <x-color><param>#6272a4</param>======================
</x-color>;; <x-color><param>#6272a4</param>工作流集成
</x-color>;; <x-color><param>#6272a4</param>======================
</x-color>;; <x-color><param>#6272a4</param>动态 Agenda 文件管理
</x-color><x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>setq</x-color> org-agenda-files <x-color><param>#ff79c6</param>(</x-color>file-expand-wildcards <x-color><param>#f1fa8c</param>"~/Documents/org/*.org"</x-color><x-color><param>#ff79c6</param>)</x-color><x-color><param>#61bfff</param>)</x-color>

;; <x-color><param>#6272a4</param>智能 Tangle 配置
</x-color><x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>defun</x-color> <x-color><param>#50fa7b</param>my/org-tangle-if-config</x-color> <x-color><param>#ff79c6</param>()</x-color>
  <x-color><param>#ff79c6</param>(when</x-color> <x-color><param>#50fa7b</param>(</x-color>string= <x-color><param>#bd93f9</param>(</x-color>buffer-file-name<x-color><param>#bd93f9</param>)</x-color>
                 <x-color><param>#bd93f9</param>(</x-color>expand-file-name <x-color><param>#f1fa8c</param>"~/.emacs.e/config.org"</x-color><x-color><param>#bd93f9</param>)</x-color><x-color><param>#50fa7b</param>)</x-color>  ;; <x-color><param>#6272a4</param>使用标准路径
</x-color>    <x-color><param>#50fa7b</param>(</x-color>org-babel-tangle<x-color><param>#50fa7b</param>)</x-color><x-color><param>#ff79c6</param>)</x-color><x-color><param>#61bfff</param>)</x-color>
<x-color><param>#61bfff</param>(</x-color>add-hook 'after-save-hook #'my/org-tangle-if-config<x-color><param>#61bfff</param>)</x-color>

;; <x-color><param>#6272a4</param>Evil 模式深度集成 
</x-color><x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>use-package</x-color> <x-color><param>#8be9fd</param>evil-org</x-color>
  <x-color><param>#ffb86c</param>:ensure</x-color> t
  <x-color><param>#ffb86c</param>:hook</x-color> <x-color><param>#ff79c6</param>(</x-color>org-mode . evil-org-mode<x-color><param>#ff79c6</param>)</x-color>
  <x-color><param>#ffb86c</param>:config</x-color>
  <x-color><param>#ff79c6</param>(</x-color>evil-org-set-key-theme '<x-color><param>#50fa7b</param>(</x-color>navigation insert textobjects additional calendar<x-color><param>#50fa7b</param>)</x-color><x-color><param>#ff79c6</param>)</x-color>
  <x-color><param>#ff79c6</param>(require</x-color> '<x-color><param>#8be9fd</param>evil-org-agenda</x-color><x-color><param>#ff79c6</param>)</x-color>
  <x-color><param>#ff79c6</param>(</x-color>evil-org-agenda-set-keys<x-color><param>#ff79c6</param>)</x-color><x-color><param>#61bfff</param>)</x-color>
</x-color></x-bg-color>  #+end_src
<x-display><param>(disable-eval #("◉" 0 1 (face org-modern-symbol)))</param><x-color><param>#88C0D0</param><bold>*</bold></x-color></x-display><x-color><param>#88C0D0</param><bold> Project Management and Agenda</bold></x-color><bold>
** Project Management(Projectile)
#+begin_src emacs-lisp :tangle ./config.el
(use-package projectile
  :ensure t
  :config
  (projectile-mode 1))

#+end_src
** Agenda
#+begin_src emacs-lisp :tangle ./config.el
;;; Org Mode 完整配置
(require 'org-agenda)
(require 'org-capture)

;; ==============================
;; 1. Org 基础设置
;; ==============================

;; Org 目录，存放所有 Org 文件
(setq org-directory "~/Documents/Notes/")

;; 设置 Org Agenda 任务文件
(setq org-agenda-files (list "~/Documents/Notes/tasks.org"
                            "~/Documents/Notes/projects.org"))

;; Org 文件默认扩展名
(setq org-default-notes-file (concat org-directory "/inbox.org"))

;; 让 Org 自动换行，避免长段落超出屏幕
(add-hook 'org-mode-hook 'visual-line-mode)

;; ==============================
;; 2. Org Agenda 视图配置
;; ==============================

;; 显示未来 7 天的任务
(setq org-agenda-span 7)

;; Agenda 视图自定义命令
(setq org-agenda-custom-commands
      '(("d" "今日待办" agenda ""
         ((org-agenda-span 'day)
          (org-deadline-warning-days 0)))
        ("w" "本周任务" agenda ""
         ((org-agenda-span 'week)
          (org-deadline-warning-days 7)))
        ("p" "项目任务" tags-todo "+project"
         ((org-agenda-overriding-header "📌 项目任务")))
        ("h" "家庭任务" tags-todo "+home"
         ((org-agenda-overriding-header "🏡 家庭任务")))))

;; 让 Agenda 视图显示待办任务
(setq org-agenda-start-on-weekday 1)  ;; 周一开始
(setq org-agenda-show-future-repeats t)  ;; 显示重复任务
(setq org-agenda-include-diary t)  ;; 显示日记

;; ==============================
;; 3. Org TODO 配置
;; ==============================

;; 自定义 TODO 状态
(setq org-todo-keywords
      '((sequence "TODO(t)" "IN-PROGRESS(i!)" "WAITING(w@)" "|" "DONE(d!)" "CANCELLED(c@)")))

;; 记录 TODO 状态变更的时间
(setq org-log-done 'time)
(setq org-log-into-drawer t)

;; 高亮显示已完成的任务
(setq org-fontify-done-headline t)

;; ==============================
;; 4. Org Capture (快速笔记)
;; ==============================

;; Capture 模板
(setq org-capture-templates
      '(("t" "📌 待办事项" entry (file+headline "~/Documents/tasks.org" "任务")
         "* TODO %?\n  创建时间: %U\n  来源: %a\n")
        ("n" "📝 笔记" entry (file+headline "~/Documents/tasks.org" "笔记")
         "* %?\n  创建时间: %U\n  来源: %a\n")
        ("m" "📅 会议记录" entry (file+headline "~/Documents/tasks.org" "会议")
         "* %? :meeting:\n  时间: %U\n  会议链接: %a\n")))

;; ==============================
;; 5. 快捷键绑定
;; ==============================

;; 绑定 Org Agenda 快捷键
(global-set-key (kbd "C-c a") 'org-agenda)

;; 绑定 Org Capture 快捷键
(global-set-key (kbd "C-c c") 'org-capture)

;; 绑定 Org Todo 快捷键
(global-set-key (kbd "C-c t") 'org-todo)

;; ==============================
;; 6. 额外优化（可选）
;; ==============================

;; 让 Agenda 任务显示优先级颜色
(setq org-priority-faces '((?A . (:foreground "red" :weight bold))
                           (?B . (:foreground "orange"))
                           (?C . (:foreground "yellow"))))

;; 让 Org Mode 自动缩进
(add-hook 'org-mode-hook 'org-indent-mode)

;; Org Agenda 美化
(setq org-agenda-window-setup 'current-window)  ;; 在当前窗口打开 Agenda
(setq org-agenda-sticky t)  ;; 让 Agenda 视图不会频繁刷新

;; Org Mode 导出 Markdown
(require 'ox-md)

;; Org Mode 自动保存
(add-hook 'org-mode-hook (lambda () (add-hook 'before-save-hook 'org-save-all-org-buffers nil t)))


#+end_src
  
<bold><x-color><param>#88C0D0</param><x-display><param>(disable-eval #("◉" 0 1 (face org-modern-symbol)))</param>*</x-display> IDE Configuration</x-color></bold>
** CMake Configuration
TODO:
- CMake select kit
- CMake debug for c/cpp (use dap)
#+BEGIN_SRC emacs-lisp :tangle ./config.el
;;-----------------CMake Mode-------------------------;;
(use-package cmake-mode
  :mode ("CMakeLists\\.txt\\'" . cmake-mode)
  :mode ("\\.cmake\\'" . cmake-mode)
  :hook (cmake-mode . lsp-deferred)
  :config
  (setq cmake-tab-width 4))

;; general varible
(defvar my-cmake-build-dir "build"
  "The default build directory for CMake projects.")

(defvar my-cmake-compiler-list
  (if (eq system-type 'darwin)
      '("clang" "clang++")
    '("gcc" "g++" "clang" "clang++"))
  "A list of available compilers to choose from, adjusted for the system.")

;; general function
(defun my-locate-project-root ()
  "Locate the project root containing 'CMakeLists.txt'."
  (locate-dominating-file default-directory "CMakeLists.txt"))

(defun my-select-compiler ()
  "Select a compiler from `my-cmake-compiler-list`."
  (interactive)
  (let ((compiler (completing-read "Select Compiler: " my-cmake-compiler-list)))
    (setenv "CC" compiler)   ;; 设置 C 编译器
    (setenv "CXX" compiler) ;; 设置 C++ 编译器
    (message "Compiler set to: %s" compiler)))

(defun my-find-executables (build-dir)
  "Find executable files in BUILD-DIR."
  (let ((files (directory-files build-dir t "^[^\\.].*")))
    (seq-filter
     (lambda (file)
       (and (file-executable-p file) ;; 可执行文件
            (not (file-directory-p file)))) ;; 排除目录
     files)))

;; CMake 命令
(defun my-cmake-setup ()
  "Run CMake to configure the project."
  (interactive)
  (let ((project-root (my-locate-project-root)))
    (if project-root
        (let ((default-directory project-root))
          (compile (format "cmake -B %s -S . -DCMAKE_EXPORT_COMPILE_COMMANDS=ON" my-cmake-build-dir)))
      (message "No CMakeLists.txt found in the project!"))))

(defun my-cmake-build ()
  "Build the CMake project."
  (interactive)
  (let ((project-root (my-locate-project-root)))
    (if project-root
        (let ((default-directory project-root))
          (compile (format "cmake --build %s" my-cmake-build-dir)))
      (message "No CMakeLists.txt found in the project!"))))
(defun my-cmake-run ()
  "Run the compiled CMake project."
  (interactive)
  (let* ((project-root (my-locate-project-root))
         (build-dir (concat project-root my-cmake-build-dir))
         (executables (my-find-executables build-dir)))
    (if (and project-root executables)
        (let ((default-directory build-dir)
              (exe (completing-read "Select executable: " executables)))
          (if (eq system-type 'windows-nt)
              (compile (format "%s" (file-name-nondirectory exe))) ;; Windows 不需要 ./ 前缀
            (compile (format "./%s" (file-name-nondirectory exe))))) ;; Unix 使用 ./ 前缀
      (message "No executable found in the build directory!"))))

(defun my-cmake-debug ()
  "Debug the CMake project."
  (interactive)
  (let* ((project-root (my-locate-project-root))
         (build-dir (concat project-root my-cmake-build-dir))
         (executables (my-find-executables build-dir)))
    (if (and project-root executables)
        (let ((default-directory build-dir)
              (exe (completing-read "Select executable to debug: " executables)))
          (if (eq system-type 'windows-nt)
              (gdb (format "gdb -i=mi %s" (file-name-nondirectory exe))) ;; Windows 不需要 ./ 前缀
            (gdb (format "gdb -i=mi ./ %s" (file-name-nondirectory exe))))) ;; Unix 使用 ./ 前缀
      (message "No executable found in the build directory!"))))
<x-color><param>#8995ba</param>#+END_SRC</x-color>

<bold><x-color><param>#88C0D0</param><x-display><param>(disable-eval #("◉" 0 1 (face org-modern-symbol)))</param>*</x-display> Evil Mode and Keybindings</x-color></bold>
<bold><x-color><param>#81A1C1</param><x-display><param>(disable-eval #("○" 0 1 (face org-modern-symbol)))</param>**</x-display> Evil Mode and Whichkey</x-color></bold>
<x-bg-color><param>#23242f</param><x-color><param>#6272a4</param>#+BEGIN_SRC emacs-lisp :tangle ./config.el

</x-color></x-bg-color><x-color><param>#61bfff</param><x-bg-color><param>#2E3440</param><x-color><param>#D8DEE9</param>(</x-color></x-bg-color></x-color><x-bg-color><param>#2E3440</param><x-color><param>#D8DEE9</param><x-color><param>#ff79c6</param>use-package</x-color> <x-color><param>#8be9fd</param>which-key</x-color>
  <x-color><param>#ffb86c</param>:init</x-color> <x-color><param>#ff79c6</param>(</x-color>which-key-mode<x-color><param>#ff79c6</param>)</x-color>
  <x-color><param>#ffb86c</param>:diminish</x-color> which-key-mode
  <x-color><param>#ffb86c</param>:config</x-color>
  <x-color><param>#ff79c6</param>(setq</x-color> which-key-idle-delay 1<x-color><param>#ff79c6</param>)</x-color><x-color><param>#61bfff</param>)</x-color>


<x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>use-package</x-color> <x-color><param>#8be9fd</param>general</x-color>
  <x-color><param>#ffb86c</param>:config</x-color>
  <x-color><param>#ff79c6</param>(general-create-definer</x-color> leader-keys
    <x-color><param>#ffb86c</param>:keymaps</x-color> '<x-color><param>#50fa7b</param>(</x-color>normal insert visual emacs<x-color><param>#50fa7b</param>)</x-color>
    <x-color><param>#ffb86c</param>:prefix</x-color> <x-color><param>#f1fa8c</param>"SPC"</x-color>
    <x-color><param>#ffb86c</param>:global-prefix</x-color> <x-color><param>#f1fa8c</param>"C-SPC"</x-color><x-color><param>#ff79c6</param>)</x-color><x-color><param>#61bfff</param>)</x-color>


;; <x-color><param>#6272a4</param>确保 evil-want-keybinding 设置正确，防止 evil-collection 警告
</x-color>

<x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>setq</x-color> evil-want-keybinding nil<x-color><param>#61bfff</param>)</x-color>


<x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>use-package</x-color> <x-color><param>#8be9fd</param>evil</x-color>

  <x-color><param>#ffb86c</param>:ensure</x-color> t

  <x-color><param>#ffb86c</param>:defer</x-color> 1
  <x-color><param>#ffb86c</param>:init</x-color>
  <x-color><param>#ff79c6</param>(setq</x-color> evil-want-integration t<x-color><param>#ff79c6</param>)</x-color>
  <x-color><param>#ff79c6</param>(setq</x-color> evil-want-C-u-scroll t<x-color><param>#ff79c6</param>)</x-color>
  <x-color><param>#ff79c6</param>(setq</x-color> evil-want-C-i-jump nil<x-color><param>#ff79c6</param>)</x-color>
  <x-color><param>#ffb86c</param>:config</x-color>
  <x-color><param>#ff79c6</param>(</x-color>evil-mode 1<x-color><param>#ff79c6</param>)</x-color>
  <x-color><param>#ff79c6</param>(</x-color>define-key evil-insert-state-map <x-color><param>#50fa7b</param>(</x-color>kbd <x-color><param>#f1fa8c</param>"C-g"</x-color><x-color><param>#50fa7b</param>)</x-color> 'evil-normal-state<x-color><param>#ff79c6</param>)</x-color>
  <x-color><param>#ff79c6</param>(</x-color>define-key evil-insert-state-map <x-color><param>#50fa7b</param>(</x-color>kbd <x-color><param>#f1fa8c</param>"C-h"</x-color><x-color><param>#50fa7b</param>)</x-color> 'evil-delete-backward-char-and-join<x-color><param>#ff79c6</param>)</x-color>

  ;; <x-color><param>#6272a4</param>Use visual line motions even outside of visual-line-mode buffers
</x-color>  <x-color><param>#ff79c6</param>(</x-color>evil-global-set-key 'motion <x-color><param>#f1fa8c</param>"j"</x-color> 'evil-next-visual-line<x-color><param>#ff79c6</param>)</x-color>
  <x-color><param>#ff79c6</param>(</x-color>evil-global-set-key 'motion <x-color><param>#f1fa8c</param>"k"</x-color> 'evil-previous-visual-line<x-color><param>#ff79c6</param>)</x-color>

  <x-color><param>#ff79c6</param>(</x-color>evil-set-initial-state 'messages-buffer-mode 'normal<x-color><param>#ff79c6</param>)</x-color>
  <x-color><param>#ff79c6</param>(</x-color>evil-set-initial-state 'dashboard-mode 'normal<x-color><param>#ff79c6</param>)</x-color><x-color><param>#61bfff</param>)</x-color>


<x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>use-package</x-color> <x-color><param>#8be9fd</param>evil-collection</x-color>
  <x-color><param>#ffb86c</param>:after</x-color> evil
  <x-color><param>#ffb86c</param>:config</x-color>
  <x-color><param>#ff79c6</param>(</x-color>evil-collection-init<x-color><param>#ff79c6</param>)</x-color><x-color><param>#61bfff</param>)</x-color>


<x-color><param>#61bfff</param>(</x-color><x-color><param>#ff79c6</param>use-package</x-color> <x-color><param>#8be9fd</param>evil-escape</x-color>
  <x-color><param>#ffb86c</param>:ensure</x-color> t
  <x-color><param>#ffb86c</param>:config</x-color>
  <x-color><param>#ff79c6</param>(setq-default</x-color> evil-escape-key-sequence <x-color><param>#f1fa8c</param>"jk"</x-color><x-color><param>#ff79c6</param>)</x-color> ;; <x-color><param>#6272a4</param>按 "jk" 触发 escape
</x-color>  <x-color><param>#ff79c6</param>(setq</x-color> evil-escape-delay 0.5<x-color><param>#ff79c6</param>)</x-color> ;; <x-color><param>#6272a4</param>设置延迟时间为 0.2 秒
</x-color>  <x-color><param>#ff79c6</param>(</x-color>evil-escape-mode 1<x-color><param>#ff79c6</param>)</x-color><x-color><param>#61bfff</param>)</x-color> ;; <x-color><param>#6272a4</param>启用 evil-escape

</x-color></x-color></x-bg-color>#+END_SRC

<x-display><param>(disable-eval #("○" 0 1 (face org-modern-symbol)))</param><bold><x-color><param>#81A1C1</param>**</x-color></bold></x-display><bold><x-color><param>#81A1C1</param> Keybindings</x-color></bold>
#+begin_src emacs-lisp :tangle ./config.el
(leader-keys

  "SPC" '(counsel-M-x :which-key "Command(M-x)"))

;; files

(leader-keys

  "f"  '(:ignore t :which-key "Files")

  "fe" '(counsel-find-file :which-key "Find files in .emacs.d")

  "fE" '(counsel-find-file :which-key "Browse .emacs.d")

  "ff" '(counsel-find-file :which-key "Find files")

  "fr" '(counsel-recentf :which-key "Recent files"))

;; windows

(leader-keys

  "w"  '(:ignore t :which-key "Window")

  "ws" '(split-window-below :which-key "Split window below")

  "wv" '(split-window-right :which-key "Split window right")

  "wd" '(delete-window :which-key "Close window"))

;; Buffer

(leader-keys

  "b"  '(:ignore t :which-key "Buffer")

  "bb" '(ivy-switch-buffer :which-key "Switch buffer")

  "bs" '(save-buffer :which-key "save buffer")

  "bk" '(kill-buffer :which-key "kill buffer"))

;; code

(leader-keys

  "c"  '(:ignore t :which-key "Code")

  "cb" '(my-cmake-build :which-key "Build/Compile")

  "cc" '(my-cmake-setup :which-key "CMake configure")

  "cd" '(compile :which-key "Debug")

  "ck" '(compile :which-key "CMake select kits")

  "cr" '(my-cmake-run :which-key "Run"))

;; projectile

(leader-keys

  "p"  '(:ignore t :which-key "Project")

  "pa" '(projectile-add-known-project :which-key "Add a project")

  "pb" '(projectile-switch-to-buffer :which-key "Switch to project buffer")

  "pf" '(projectile-find-file :which-key "Find file in project")

  "pp" '(project-switch-project :which-key "Switch project"))

#+end_src
</bold>